package org.devnull.matchmaking.statistics;

import org.devnull.matchmaking.Match;
import org.devnull.matchmaking.MatchStatistics;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * TODO: Write this!
 */
public class BasicMatchStatistics implements MatchStatistics, java.io.Serializable {

    /** Generated by the serialver utility */
    //TODO: public static final long serialVersionUID = 3735284422118686081L;



    private final Map<String, Object> propertyMap;
    public final Match match;
    public final double winRateTeam1Min;
    public final double winRateTeam1Max;
    public final double winRateTeam2Min;
    public final double winRateTeam2Max;
    public final double winRateMatchMin;
    public final double winRateMatchMax;
    public final long battleExperienceTeam1Min;
    public final long battleExperienceTeam1Max;
    public final long battleExperienceTeam2Min;
    public final long battleExperienceTeam2Max;
    public final long battleExperienceMatchMin;
    public final long battleExperienceMatchMax;

    public BasicMatchStatistics(
            final Match match,
            final double winRateTeam1Min,
            final double winRateTeam1Max,
            final double winRateTeam2Min,
            final double winRateTeam2Max,
            final double winRateMatchMin,
            final double winRateMatchMax,
            final long battleExperienceTeam1Min,
            final long battleExperienceTeam1Max,
            final long battleExperienceTeam2Min,
            final long battleExperienceTeam2Max,
            final long battleExperienceMatchMin,
            final long battleExperienceMatchMax
    ) {
        this.propertyMap = new HashMap<String, Object>();
        this.match = match;
        this.winRateTeam1Min = winRateTeam1Min;
        this.winRateTeam1Max = winRateTeam1Max;
        this.winRateTeam2Min = winRateTeam2Min;
        this.winRateTeam2Max = winRateTeam2Max;
        this.winRateMatchMin = winRateMatchMin;
        this.winRateMatchMax = winRateMatchMax;
        this.battleExperienceTeam1Min = battleExperienceTeam1Min;
        this.battleExperienceTeam1Max = battleExperienceTeam1Max;
        this.battleExperienceTeam2Min = battleExperienceTeam2Min;
        this.battleExperienceTeam2Max = battleExperienceTeam2Max;
        this.battleExperienceMatchMin = battleExperienceMatchMin;
        this.battleExperienceMatchMax = battleExperienceMatchMax;

        this.propertyMap.put(TEAM1_WIN_RATE_MIN, winRateTeam1Min);
        this.propertyMap.put(TEAM1_WIN_RATE_MAX, winRateTeam1Max);
        this.propertyMap.put(TEAM1_BATTLE_EXPERIENCE_MIN, battleExperienceTeam1Min);
        this.propertyMap.put(TEAM1_BATTLE_EXPERIENCE_MAX, battleExperienceTeam1Max);

        this.propertyMap.put(TEAM2_WIN_RATE_MIN, winRateTeam2Min);
        this.propertyMap.put(TEAM2_WIN_RATE_MAX, winRateTeam2Max);
        this.propertyMap.put(TEAM2_BATTLE_EXPERIENCE_MIN, battleExperienceTeam2Min);
        this.propertyMap.put(TEAM2_BATTLE_EXPERIENCE_MAX, battleExperienceTeam2Max);

        this.propertyMap.put(MATCH_WIN_RATE_MIN, winRateMatchMin);
        this.propertyMap.put(MATCH_WIN_RATE_MAX, winRateMatchMax);
        this.propertyMap.put(MATCH_BATTLE_EXPERIENCE_MIN, battleExperienceMatchMin);
        this.propertyMap.put(MATCH_BATTLE_EXPERIENCE_MAX, battleExperienceMatchMax);
    }

    @Override
    public Object getStatistics(String key) {
        return propertyMap.get(key);
    }

}
